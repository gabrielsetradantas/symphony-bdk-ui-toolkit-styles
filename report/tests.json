{
  "efd58815c4a559bc01c114ec930c83513964ef69": {
    "id": "efd58815c4a559bc01c114ec930c83513964ef69",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Avatar",
      "Avatars"
    ],
    "storyId": "components-avatar--avatars",
    "story": {
      "id": "components-avatar--avatars",
      "kind": "Components/Avatar",
      "name": "Avatars",
      "story": "Avatars",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/avatar.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-avatar--avatars",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "expect": "chrome-expect-1.png",
            "diff": "chrome-diff-1.png",
            "error": "Expected image to match"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "expect": "chrome-expect-2.png",
            "diff": "chrome-diff-2.png",
            "error": "Expected image to match"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png",
            "expect": "chrome-expect-3.png",
            "diff": "chrome-diff-3.png",
            "error": "Expected image to match"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png",
            "expect": "chrome-expect-4.png",
            "diff": "chrome-diff-4.png",
            "error": "Expected image to match"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png",
            "expect": "chrome-expect-6.png",
            "diff": "chrome-diff-6.png",
            "error": "Expected image to match"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ],
    "approved": {
      "chrome": 3
    }
  },
  "d7e083b1f3f7ef6cf0356a963a9f5823e312ef23": {
    "id": "d7e083b1f3f7ef6cf0356a963a9f5823e312ef23",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Avatar",
      "Avatar With Badge"
    ],
    "storyId": "components-avatar--avatar-with-badge",
    "story": {
      "id": "components-avatar--avatar-with-badge",
      "kind": "Components/Avatar",
      "name": "Avatar With Badge",
      "story": "Avatar With Badge",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/avatar.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-avatar--avatar-with-badge",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "a7601e72720cdef42d69fe2151647ec8d3db8e04": {
    "id": "a7601e72720cdef42d69fe2151647ec8d3db8e04",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Banner",
      "Banner"
    ],
    "storyId": "components-banner--banner",
    "story": {
      "id": "components-banner--banner",
      "kind": "Components/Banner",
      "name": "Banner",
      "story": "Banner",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/banner.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-banner--banner",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "92ffd04cad6db22c73bc22abcb38326d89697762": {
    "id": "92ffd04cad6db22c73bc22abcb38326d89697762",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Button",
      "Button"
    ],
    "storyId": "components-button--button",
    "story": {
      "id": "components-button--button",
      "kind": "Components/Button",
      "name": "Button",
      "story": "Button",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-button--button",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "eb23613164d38517c72849071d966b184e5b22d9": {
    "id": "eb23613164d38517c72849071d966b184e5b22d9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Button",
      "Theming"
    ],
    "storyId": "components-button--theming",
    "story": {
      "id": "components-button--theming",
      "kind": "Components/Button",
      "name": "Theming",
      "story": "Theming",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-button--theming",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "be7776073c7d2da79ef6cb0b2a1e1c09e02d62dc": {
    "id": "be7776073c7d2da79ef6cb0b2a1e1c09e02d62dc",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Card",
      "Card"
    ],
    "storyId": "components-card--card",
    "story": {
      "id": "components-card--card",
      "kind": "Components/Card",
      "name": "Card",
      "story": "Card",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/card.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-card--card",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "f9ad97062f64a804773fa82e42c13fbbcc55d811": {
    "id": "f9ad97062f64a804773fa82e42c13fbbcc55d811",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Inputs",
      "Checkbox",
      "Checkbox"
    ],
    "storyId": "components-inputs-checkbox--checkbox",
    "story": {
      "id": "components-inputs-checkbox--checkbox",
      "kind": "Components/Inputs/Checkbox",
      "name": "Checkbox",
      "story": "Checkbox",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/checkbox.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-inputs-checkbox--checkbox",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "8909cd0d4135c81b1ea32f5c3af72320a90275d9": {
    "id": "8909cd0d4135c81b1ea32f5c3af72320a90275d9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Utils",
      "Color Variables",
      "Color Variables"
    ],
    "storyId": "utils-color-variables--color-variables",
    "story": {
      "id": "utils-color-variables--color-variables",
      "kind": "Utils/Color Variables",
      "name": "Color Variables",
      "story": "Color Variables",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/colorVariables.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "utils-color-variables--color-variables",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "a614532c8ed43fe6c6a6516e575dd3e79b9c293f": {
    "id": "a614532c8ed43fe6c6a6516e575dd3e79b9c293f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Quote",
      "Quote"
    ],
    "storyId": "components-quote--quote",
    "story": {
      "id": "components-quote--quote",
      "kind": "Components/Quote",
      "name": "Quote",
      "story": "Quote",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/containers.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-quote--quote",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "b68b8f6eb30dceb4a9fc56ada46a88d7ab5b6a4d": {
    "id": "b68b8f6eb30dceb4a9fc56ada46a88d7ab5b6a4d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Dialogs",
      "Small Dialog"
    ],
    "storyId": "components-dialogs--small-dialog",
    "story": {
      "id": "components-dialogs--small-dialog",
      "kind": "Components/Dialogs",
      "name": "Small Dialog",
      "story": "Small Dialog",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/dialogs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-dialogs--small-dialog",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "failed",
    "results": [
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      }
    ]
  },
  "d298d3948dd17410f1cbdc74e0c8f93b0d320d20": {
    "id": "d298d3948dd17410f1cbdc74e0c8f93b0d320d20",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Dialogs",
      "Medium Dialog"
    ],
    "storyId": "components-dialogs--medium-dialog",
    "story": {
      "id": "components-dialogs--medium-dialog",
      "kind": "Components/Dialogs",
      "name": "Medium Dialog",
      "story": "Medium Dialog",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/dialogs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-dialogs--medium-dialog",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "failed",
    "results": [
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      }
    ]
  },
  "dfaf36a860b56ba44cbd013a0d73b38bc53fc809": {
    "id": "dfaf36a860b56ba44cbd013a0d73b38bc53fc809",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Dialogs",
      "Large Dialog"
    ],
    "storyId": "components-dialogs--large-dialog",
    "story": {
      "id": "components-dialogs--large-dialog",
      "kind": "Components/Dialogs",
      "name": "Large Dialog",
      "story": "Large Dialog",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/dialogs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-dialogs--large-dialog",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "failed",
    "results": [
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      }
    ]
  },
  "6f44fbbe3246a1d3c3611427a863e12853efc051": {
    "id": "6f44fbbe3246a1d3c3611427a863e12853efc051",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Dialogs",
      "Full Page Dialog"
    ],
    "storyId": "components-dialogs--full-page-dialog",
    "story": {
      "id": "components-dialogs--full-page-dialog",
      "kind": "Components/Dialogs",
      "name": "Full Page Dialog",
      "story": "Full Page Dialog",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/dialogs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-dialogs--full-page-dialog",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "failed",
    "results": [
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      }
    ]
  },
  "478fbfdf3ab11300c130bcedb32f2ff693aaa38a": {
    "id": "478fbfdf3ab11300c130bcedb32f2ff693aaa38a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Dialogs",
      "Simple Dialog"
    ],
    "storyId": "components-dialogs--simple-dialog",
    "story": {
      "id": "components-dialogs--simple-dialog",
      "kind": "Components/Dialogs",
      "name": "Simple Dialog",
      "story": "Simple Dialog",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/dialogs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-dialogs--simple-dialog",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "failed",
    "results": [
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      },
      {
        "status": "failed",
        "images": {},
        "error": "WebDriverError: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Cannot take screenshot with 0 height.\"}\n  (Session info: chrome=91.0.4472.106)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:517:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:642:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async mixin.execute (node_modules/selenium-webdriver/lib/webdriver.js:731:17)\n    at async takeScreenshot (node_modules/creevey/lib/server/selenium/browser.js:330:40)\n    at async Context.storyTest (node_modules/creevey/lib/server/stories.js:47:160)"
      }
    ]
  },
  "cbb62159e0cfc31161268b0ff414f0c0815112f2": {
    "id": "cbb62159e0cfc31161268b0ff414f0c0815112f2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Welcome",
      "Docs",
      "Getting Started"
    ],
    "storyId": "welcome-docs--getting-started",
    "story": {
      "id": "welcome-docs--getting-started",
      "kind": "Welcome/Docs",
      "name": "Getting Started",
      "story": "Getting Started",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "welcome-docs--getting-started",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "112f735e2bc10372a14802587fa620177164544b": {
    "id": "112f735e2bc10372a14802587fa620177164544b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Welcome",
      "Docs",
      "Theming Guide"
    ],
    "storyId": "welcome-docs--theming-guide",
    "story": {
      "id": "welcome-docs--theming-guide",
      "kind": "Welcome/Docs",
      "name": "Theming Guide",
      "story": "Theming Guide",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "welcome-docs--theming-guide",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png",
            "expect": "chrome-expect-3.png",
            "diff": "chrome-diff-3.png",
            "error": "Expected image to match"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png",
            "expect": "chrome-expect-4.png",
            "diff": "chrome-diff-4.png",
            "error": "Expected image to match"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png",
            "expect": "chrome-expect-6.png",
            "diff": "chrome-diff-6.png",
            "error": "Expected image to match"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ],
    "approved": {
      "chrome": 3
    }
  },
  "a5c10dd6adc92e8e2e6d37bf139e845e617c7c0f": {
    "id": "a5c10dd6adc92e8e2e6d37bf139e845e617c7c0f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Welcome",
      "Docs",
      "Contributing"
    ],
    "storyId": "welcome-docs--contributing",
    "story": {
      "id": "welcome-docs--contributing",
      "kind": "Welcome/Docs",
      "name": "Contributing",
      "story": "Contributing",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "welcome-docs--contributing",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "68851a1e1de71d8095cddee3210f131112694569": {
    "id": "68851a1e1de71d8095cddee3210f131112694569",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Welcome",
      "Docs",
      "Sandbox"
    ],
    "storyId": "welcome-docs--sandbox",
    "story": {
      "id": "welcome-docs--sandbox",
      "kind": "Welcome/Docs",
      "name": "Sandbox",
      "story": "Sandbox",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "welcome-docs--sandbox",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "6e4624c689b6810b0f851a56713ed6cd13b66351": {
    "id": "6e4624c689b6810b0f851a56713ed6cd13b66351",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Dropdown Menu",
      "Dropdown Menu"
    ],
    "storyId": "components-dropdown-menu--dropdown-menu",
    "story": {
      "id": "components-dropdown-menu--dropdown-menu",
      "kind": "Components/Dropdown Menu",
      "name": "Dropdown Menu",
      "story": "Dropdown Menu",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/dropdownMenu.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-dropdown-menu--dropdown-menu",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "0e0ab719a684034485c5bcdace56b020a02c597e": {
    "id": "0e0ab719a684034485c5bcdace56b020a02c597e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Inputs",
      "Text Field"
    ],
    "storyId": "components-inputs--text-field",
    "story": {
      "id": "components-inputs--text-field",
      "kind": "Components/Inputs",
      "name": "Text Field",
      "story": "Text Field",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/fields.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-inputs--text-field",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "a7920b33153dcf36b4a35be7fba1dda0cd185ef6": {
    "id": "a7920b33153dcf36b4a35be7fba1dda0cd185ef6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Inputs",
      "Select"
    ],
    "storyId": "components-inputs--select",
    "story": {
      "id": "components-inputs--select",
      "kind": "Components/Inputs",
      "name": "Select",
      "story": "Select",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/fields.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-inputs--select",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "6b1e7a047429aa17ef1a763f0df651ceb6d0b2d7": {
    "id": "6b1e7a047429aa17ef1a763f0df651ceb6d0b2d7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Inputs",
      "Text Area"
    ],
    "storyId": "components-inputs--text-area",
    "story": {
      "id": "components-inputs--text-area",
      "kind": "Components/Inputs",
      "name": "Text Area",
      "story": "Text Area",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/fields.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-inputs--text-area",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "8a9a2d587e5afeae92bf799aa072a0401678bd19": {
    "id": "8a9a2d587e5afeae92bf799aa072a0401678bd19",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Inputs",
      "Dropdown List"
    ],
    "storyId": "components-inputs--dropdown-list",
    "story": {
      "id": "components-inputs--dropdown-list",
      "kind": "Components/Inputs",
      "name": "Dropdown List",
      "story": "Dropdown List",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/fields.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-inputs--dropdown-list",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "b6350089ca963f2b95abf4bca35c5ab637545393": {
    "id": "b6350089ca963f2b95abf4bca35c5ab637545393",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Hint",
      "Hint"
    ],
    "storyId": "components-hint--hint",
    "story": {
      "id": "components-hint--hint",
      "kind": "Components/Hint",
      "name": "Hint",
      "story": "Hint",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/hint.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-hint--hint",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "41dfa5147763b83ea31a2fa1aa11b26ba496b3f7": {
    "id": "41dfa5147763b83ea31a2fa1aa11b26ba496b3f7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Icon",
      "Icon"
    ],
    "storyId": "components-icon--icon",
    "story": {
      "id": "components-icon--icon",
      "kind": "Components/Icon",
      "name": "Icon",
      "story": "Icon",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/icons.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-icon--icon",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "fdd3e07097229acbc9c9fd5e339b9d01999fbbe0": {
    "id": "fdd3e07097229acbc9c9fd5e339b9d01999fbbe0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Link",
      "Link"
    ],
    "storyId": "components-link--link",
    "story": {
      "id": "components-link--link",
      "kind": "Components/Link",
      "name": "Link",
      "story": "Link",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/links.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-link--link",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "de0d1d13f720b09e6fb2758374155820b47e39b8": {
    "id": "de0d1d13f720b09e6fb2758374155820b47e39b8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Spinner",
      "Spinner"
    ],
    "storyId": "components-spinner--spinner",
    "story": {
      "id": "components-spinner--spinner",
      "kind": "Components/Spinner",
      "name": "Spinner",
      "story": "Spinner",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/loader.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-spinner--spinner",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "dcc1eb3f424b80d4cfd2d60ae36504bf05edc6a9": {
    "id": "dcc1eb3f424b80d4cfd2d60ae36504bf05edc6a9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Navigation",
      "Navigation"
    ],
    "storyId": "components-navigation--navigation",
    "story": {
      "id": "components-navigation--navigation",
      "kind": "Components/Navigation",
      "name": "Navigation",
      "story": "Navigation",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/navigation.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-navigation--navigation",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "a16b776fa5f66594b27a1d1ff9f6ad758a50cfc2": {
    "id": "a16b776fa5f66594b27a1d1ff9f6ad758a50cfc2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Inputs",
      "Radio",
      "Radio"
    ],
    "storyId": "components-inputs-radio--radio",
    "story": {
      "id": "components-inputs-radio--radio",
      "kind": "Components/Inputs/Radio",
      "name": "Radio",
      "story": "Radio",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/radio.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-inputs-radio--radio",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "23be8347f7adcf710311e1a5185efb1cfa1de234": {
    "id": "23be8347f7adcf710311e1a5185efb1cfa1de234",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Inputs",
      "Switch",
      "Switch"
    ],
    "storyId": "components-inputs-switch--switch",
    "story": {
      "id": "components-inputs-switch--switch",
      "kind": "Components/Inputs/Switch",
      "name": "Switch",
      "story": "Switch",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/switch.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-inputs-switch--switch",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "bba46ed88ea37a5ffd0b455e2caa863706d2b9eb": {
    "id": "bba46ed88ea37a5ffd0b455e2caa863706d2b9eb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Table",
      "Table"
    ],
    "storyId": "components-table--table",
    "story": {
      "id": "components-table--table",
      "kind": "Components/Table",
      "name": "Table",
      "story": "Table",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/tables.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-table--table",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "5c90b3e754d21c1aea0bf0f8374710bbf507a809": {
    "id": "5c90b3e754d21c1aea0bf0f8374710bbf507a809",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Utils",
      "Label",
      "Label"
    ],
    "storyId": "utils-label--label",
    "story": {
      "id": "utils-label--label",
      "kind": "Utils/Label",
      "name": "Label",
      "story": "Label",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/text.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "utils-label--label",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "526080b0c8de86c0feed3a4ece7e548695b6944b": {
    "id": "526080b0c8de86c0feed3a4ece7e548695b6944b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Toast",
      "Toast"
    ],
    "storyId": "components-toast--toast",
    "story": {
      "id": "components-toast--toast",
      "kind": "Components/Toast",
      "name": "Toast",
      "story": "Toast",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/toast.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-toast--toast",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "fb5b0f01a4e0fe92bb726bbac56a2e0d239c739e": {
    "id": "fb5b0f01a4e0fe92bb726bbac56a2e0d239c739e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Components",
      "Tooltip",
      "Tooltip"
    ],
    "storyId": "components-tooltip--tooltip",
    "story": {
      "id": "components-tooltip--tooltip",
      "kind": "Components/Tooltip",
      "name": "Tooltip",
      "story": "Tooltip",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/tooltip.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "components-tooltip--tooltip",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "53c66ffddbb68259a7ca4af7c1712d77cc125ec4": {
    "id": "53c66ffddbb68259a7ca4af7c1712d77cc125ec4",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Utils",
      "Text Colors"
    ],
    "storyId": "utils--text-colors",
    "story": {
      "id": "utils--text-colors",
      "kind": "Utils",
      "name": "Text Colors",
      "story": "Text Colors",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/utils.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "utils--text-colors",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "68b28f87296a50bda104465f77bd671634e190c1": {
    "id": "68b28f87296a50bda104465f77bd671634e190c1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Utils",
      "Background Colors"
    ],
    "storyId": "utils--background-colors",
    "story": {
      "id": "utils--background-colors",
      "kind": "Utils",
      "name": "Background Colors",
      "story": "Background Colors",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/utils.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "utils--background-colors",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "1aac30809f670a03f6c246dd7e2a10318294e6e7": {
    "id": "1aac30809f670a03f6c246dd7e2a10318294e6e7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Utils",
      "Spacing"
    ],
    "storyId": "utils--spacing",
    "story": {
      "id": "utils--spacing",
      "kind": "Utils",
      "name": "Spacing",
      "story": "Spacing",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/utils.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "utils--spacing",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "1d5c63de4452dfa71880e155521e1bbaa0c3d141": {
    "id": "1d5c63de4452dfa71880e155521e1bbaa0c3d141",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Utils",
      "Typography"
    ],
    "storyId": "utils--typography",
    "story": {
      "id": "utils--typography",
      "kind": "Utils",
      "name": "Typography",
      "story": "Typography",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/utils.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "utils--typography",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  },
  "bef3eeb98ee9827440156be545e89074a4b62714": {
    "id": "bef3eeb98ee9827440156be545e89074a4b62714",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Validations",
      "Validation",
      "Validation"
    ],
    "storyId": "validations-validation--validation",
    "story": {
      "id": "validations-validation--validation",
      "kind": "Validations/Validation",
      "name": "Validation",
      "story": "Validation",
      "parameters": {
        "framework": "html",
        "fileName": "./stories/validation.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "validations-validation--validation",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }",
    "status": "success",
    "results": [
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-1.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "failed",
        "images": {
          "chrome": {
            "actual": "chrome-actual-2.png",
            "error": "Expected image does not exists"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-3.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-4.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-5.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-6.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-7.png"
          }
        }
      },
      {
        "status": "success",
        "images": {
          "chrome": {
            "actual": "chrome-actual-8.png"
          }
        }
      }
    ]
  }
}